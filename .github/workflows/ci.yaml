name: Django CI

on: [push, pull_request]


jobs:



  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 . --ignore=W605,E501

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-    

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r myproject/requirements.txt

    - name: Run migrations
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: True
      run: python myproject/manage.py migrate

    - name: Run tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: True
      run: python myproject/manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/drf_docker:${{ github.sha }} ./myproject

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/drf_docker:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 755 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_host

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/drf_docker:${{ github.sha }}
            docker stop drf_docker || true
            docker rm drf_docker || true
            docker run -d --name drf_docker -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/drf_docker:${{ github.sha }}
          EOF
